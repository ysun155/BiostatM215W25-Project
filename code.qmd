---
title: "BiostatM215 Project Code"
format:
  html:
    theme: cosmo
    embed-resources: true
    number-sections: false
    toc: true
    toc-depth: 4
    toc-location: left
    code-fold: false
knitr:
  opts_chunk: 
    cache: false    
    echo: true
    fig.align: 'center'
    fig.width: 6
    fig.height: 4
    message: FALSE
---

# load package

```{r message=FALSE}
library(dplyr)
library(survminer)
library(survival)
library(ggplot2)
library(gridExtra)
library(gtsummary)
library(patchwork)
library(survival)
library(broom)
library(flextable)
library(officer)
```

# read the data

```{r}
PEACE <- read.csv("peacedata.csv",header = TRUE)
head(PEACE)
dim(PEACE)

# check whether there is N/A value
sum(is.na(PEACE))

# check event rate
table(PEACE$death)

PEACE <- PEACE %>%
  mutate(age.group = ifelse(age <= 65, 0, 1)) %>%
  filter(t2death != 0)
```

# visualization

```{r fig.height=7, fig.width=20}
data <- PEACE

data$age.group <- factor(data$age.group, labels = c("â‰¤ 65", "> 65"))
data$death <- factor(data$death, labels = c("Censored", "Death"))
data$tx <- factor(data$tx, labels = c("Standard", "ACE-inhibitor therapy"))
data$gender <- factor(data$gender, labels = c("Male", "Female"))
data$hidiabet <- factor(data$hidiabet, labels = c("No Diabetes", "Diabetes"))
data$hihypert <- factor(data$hihypert, labels = c("No Hypertension", "Hypertension"))

# Function to create bar plots
plot_bar <- function(df, column, title) {
  ggplot(df, aes_string(x = column, fill = column)) +
    geom_bar() +
    labs(title = title, x = column, y = "Count") +
    theme_minimal() +
    theme(legend.position = "none")
}

# Generate bar plots

p0 <- plot_bar(data, "death", "Death Status Distribution")
p1 <- plot_bar(data, "tx", "Treatment Group Distribution")
p2 <- plot_bar(data, "gender", "Gender Distribution")
p3 <- plot_bar(data, "hidiabet", "Diabetes History Distribution")
p4 <- plot_bar(data, "hihypert", "Hypertension History Distribution")
p5 <- ggplot(data, aes(x = age)) +
  geom_histogram(binwidth = 3, fill = "skyblue", color = "black") +
  labs(title = "Age Distribution", x = "Age", y = "Count") +
  theme_minimal()
p6 <- ggplot(data, aes(x = sysbp)) +
  geom_histogram(binwidth = 5, fill = "skyblue", color = "black") +
  labs(title = "Systolic Blood Pressure Distribution", x = "Systolic Blood Pressure", y = "Count") +
  theme_minimal()

# Arrange all plots in a grid layout
grid.arrange(p0,p1, p2, p3, p4,p5,p6, ncol = 4)
```

# tab1 - Baseline characteristics

```{r}
tab1 <- data %>%
  select(tx, age.group, sysbp, gender, hidiabet, hihypert) %>%
  tbl_summary(by = tx,  # Compare by treatment group
              statistic = list(all_continuous() ~ "{mean} ({sd})",
                               all_categorical() ~ "{n} ({p}%)"),
              missing = "no",
              label = list(
      age.group ~ "Age Group",
      sysbp ~ "Systolic Blood Pressure",
      gender ~ "Gender",
      hidiabet ~ "History of Diabetes",
      hihypert ~ "History of Hypertension"
    )) %>%
  add_p(test = list(
    all_continuous() ~ "t.test",
    all_categorical() ~ "chisq.test")
    ) %>%
  modify_header(label = "**Variable**") %>%
  bold_labels()
tab1

# Save as a Word document (easy to copy into Google Docs)
library(officer)
tab1 %>%
  as_flex_table() %>%
  flextable::save_as_docx(path = "tab1.docx")
```


# fig1 - km curve

```{r fig.height=7, fig.width= 7}
fit = survfit(Surv(t2death, death) ~ tx, data = PEACE)
#summary(fit)
fig1 <- ggsurvplot(fit, 
           data = PEACE, 
           # pval = TRUE,
           # pval.coord = c(10, 0.85),
           conf.int = TRUE, 
           risk.table = TRUE, 
           palette="jco", 
           #title = "Kaplan-Meier Curve", 
           legend.labs=c("Standard", 
                         "ACE-inhibitor therapy"), 
           legend.title="Treatment", 
           tables.height = 0.25,
           ylim = c(0.8, 1))
fig1

# save as png
library(cowplot)
png("fig1.png", width = 7, height = 7, units = "in", res = 300)
print(fig1)
dev.off()
```


# log-rank test (just to check)

```{r}
log_rank=survdiff(Surv(t2death, death) ~ tx, data = PEACE)
log_rank$pvalue
```

# original cox model (not good fit)

## mod1

```{r}
fit1 <- coxph(Surv(t2death,death) ~ tx, data = PEACE, ties = 'breslow') 
summary(fit1)
```

```{r}
cox.zph(fit1)

#Get Cox-Snell residual based on Martingale residuals
mg.residual <- resid(fit1, type = "martingale")
cs.residual <- PEACE$death - mg.residual
#Graphical Plot
fit.cs <- survfit(Surv(cs.residual, PEACE$death) ~ 1) #Get Kaplan-Meier estiamtes
H.cs <- cumsum(fit.cs$n.event/fit.cs$n.risk)
plot(fit.cs$time, H.cs, type='s', col='blue',
main = 'Cox-Snell Residual Plot',
xlab = 'Residual', ylab = 'Nelson-Aalen Cum. Hazard')
#Note here that 'time' is the value of the Cox-Snell residual
abline(0, 1, col='red', lty = 2)
```

## mod2

```{r}
fit2 <- coxph(Surv(t2death,death) ~ tx + age + gender, data = PEACE, ties = 'breslow') 
summary(fit2)
```

```{r}
cox.zph(fit2)

#Get Cox-Snell residual based on Martingale residuals
mg.residual <- resid(fit2, type = "martingale")
cs.residual <- PEACE$death - mg.residual
#Graphical Plot
fit.cs <- survfit(Surv(cs.residual, PEACE$death) ~ 1) #Get Kaplan-Meier estiamtes
H.cs <- cumsum(fit.cs$n.event/fit.cs$n.risk)
plot(fit.cs$time, H.cs, type='s', col='blue',
main = 'Cox-Snell Residual Plot',
xlab = 'Residual', ylab = 'Nelson-Aalen Cum. Hazard')
#Note here that 'time' is the value of the Cox-Snell residual
abline(0, 1, col='red', lty = 2)
```



## mod3

```{r}
fit3 <- coxph(Surv(t2death,death) ~ tx + age + gender + sysbp + hidiabet + hihypert, data = PEACE, ties = 'breslow') 
summary(fit3)
```

```{r}
cox.zph(fit3)

#Get Cox-Snell residual based on Martingale residuals
mg.residual <- resid(fit2, type = "martingale")
cs.residual <- PEACE$death - mg.residual
#Graphical Plot
fit.cs <- survfit(Surv(cs.residual, PEACE$death) ~ 1) #Get Kaplan-Meier estiamtes
H.cs <- cumsum(fit.cs$n.event/fit.cs$n.risk)
plot(fit.cs$time, H.cs, type='s', col='blue',
main = 'Cox-Snell Residual Plot',
xlab = 'Residual', ylab = 'Nelson-Aalen Cum. Hazard')
#Note here that 'time' is the value of the Cox-Snell residual
abline(0, 1, col='red', lty = 2)
```


# final cox model (change to age group)


## mod1

```{r}
fit1 <- coxph(Surv(t2death,death) ~ tx, data = PEACE, ties = 'breslow') 
summary(fit1)
```

```{r}
cox.zph(fit1)

#Get Cox-Snell residual based on Martingale residuals
mg.residual <- resid(fit1, type = "martingale")
cs.residual <- PEACE$death - mg.residual
#Graphical Plot
fit.cs <- survfit(Surv(cs.residual, PEACE$death) ~ 1) #Get Kaplan-Meier estiamtes
H.cs <- cumsum(fit.cs$n.event/fit.cs$n.risk)
plot(fit.cs$time, H.cs, type='s', col='blue',
main = 'Cox-Snell Residual Plot',
xlab = 'Residual', ylab = 'Nelson-Aalen Cum. Hazard')
#Note here that 'time' is the value of the Cox-Snell residual
abline(0, 1, col='red', lty = 2)
```

## mod2

```{r}
fit2 <- coxph(Surv(t2death,death) ~ tx + age.group + gender, data = PEACE, ties = 'breslow') 
summary(fit2)
```

```{r}
cox.zph(fit2)

#Get Cox-Snell residual based on Martingale residuals
mg.residual <- resid(fit2, type = "martingale")
cs.residual <- PEACE$death - mg.residual
#Graphical Plot
fit.cs <- survfit(Surv(cs.residual, PEACE$death) ~ 1) #Get Kaplan-Meier estiamtes
H.cs <- cumsum(fit.cs$n.event/fit.cs$n.risk)
plot(fit.cs$time, H.cs, type='s', col='blue',
main = 'Cox-Snell Residual Plot',
xlab = 'Residual', ylab = 'Nelson-Aalen Cum. Hazard')
#Note here that 'time' is the value of the Cox-Snell residual
abline(0, 1, col='red', lty = 2)
```


## mod3

```{r}
fit3 <- coxph(Surv(t2death,death) ~ tx + age.group + gender + sysbp + hidiabet + hihypert, data = PEACE, ties = 'breslow') 
summary(fit3)
```

```{r}
cox.zph(fit3)

#Get Cox-Snell residual based on Martingale residuals
mg.residual <- resid(fit3, type = "martingale")
cs.residual <- PEACE$death - mg.residual
#Graphical Plot
fit.cs <- survfit(Surv(cs.residual, PEACE$death) ~ 1) #Get Kaplan-Meier estiamtes
H.cs <- cumsum(fit.cs$n.event/fit.cs$n.risk)
plot(fit.cs$time, H.cs, type='s', col='blue',
main = 'Cox-Snell Residual Plot',
xlab = 'Residual', ylab = 'Nelson-Aalen Cum. Hazard')
#Note here that 'time' is the value of the Cox-Snell residual
abline(0, 1, col='red', lty = 2)
```

# tab2 - summary of all models

```{r}
# Extract results for all models
tidy_fit1 <- tidy(fit1, exponentiate = TRUE) %>%
  mutate(Model = "Model 1") %>%
  mutate(across(c(estimate, std.error), ~ round(.x, 2)),
         across(c(p.value), ~ round(.x, 4)))

tidy_fit2 <- tidy(fit2, exponentiate = TRUE) %>%
  mutate(Model = "Model 2") %>%
  mutate(across(c(estimate, std.error), ~ round(.x, 2)),
         across(c(p.value), ~ round(.x, 4)))

tidy_fit3 <- tidy(fit3, exponentiate = TRUE) %>%
  mutate(Model = "Model 3") %>%
  mutate(across(c(estimate, std.error), ~ round(.x, 2)),
         across(c(p.value), ~ round(.x, 4)))

# Combine all model terms
all_variables <- unique(c(tidy_fit1$term, tidy_fit2$term, tidy_fit3$term))

# Create model data frames ensuring Model 1 has only one value filled
df_model1 <- data.frame(
  Variable = all_variables,
  HR1 = ifelse(all_variables == "tx", tidy_fit1$estimate[tidy_fit1$term == "tx"], NA),
  SE1 = ifelse(all_variables == "tx", tidy_fit1$std.error[tidy_fit1$term == "tx"], NA),
  PValue1 = ifelse(all_variables == "tx", tidy_fit1$p.value[tidy_fit1$term == "tx"], NA)
)

df_model2 <- data.frame(
  Variable = all_variables,
  HR2 = ifelse(all_variables %in% tidy_fit2$term, 
               tidy_fit2$estimate[match(all_variables, tidy_fit2$term)], NA),
  SE2 = ifelse(all_variables %in% tidy_fit2$term, 
               tidy_fit2$std.error[match(all_variables, tidy_fit2$term)], NA),
  PValue2 = ifelse(all_variables %in% tidy_fit2$term, 
                   tidy_fit2$p.value[match(all_variables, tidy_fit2$term)], NA)
)

df_model3 <- tidy_fit3 %>%
  select(term, estimate, std.error, p.value) %>%
  rename(Variable = term, HR3 = estimate, SE3 = std.error, PValue3 = p.value)


# Merge all model results
cox_results <- full_join(df_model1, df_model2, by = "Variable") %>%
  full_join(df_model3, by = "Variable")

# Rename variables to descriptive names
cox_results <- cox_results %>%
  mutate(Variable = recode(Variable,
    tx = "Treatment",
    age.group = "Age group",
    gender = "Gender",
    sysbp = "Systolic blood pressure",
    hidiabet = "History of diabetes",
    hihypert = "History of hypertension"
  ))

# Convert to flextable with grouped headers
ft <- flextable(cox_results) %>%
  set_header_labels(
    Variable = " ",
    HR1 = "HR", SE1 = "SE", PValue1 = "p-value",
    HR2 = "HR", SE2 = "SE", PValue2 = "p-value",
    HR3 = "HR", SE3 = "SE", PValue3 = "p-value"
  ) %>%
  add_header(
    HR1 = "Model I", SE1 = "Model I", PValue1 = "Model I",
    HR2 = "Model II", SE2 = "Model II", PValue2 = "Model II",
    HR3 = "Model III", SE3 = "Model III", PValue3 = "Model III",
    top = TRUE
  ) %>%
  merge_h(part = "header") %>%
  align(align = "center", part = "all") %>%
  autofit() %>%
  add_footer_lines("Abbreviations: HR, Hazard Ratio; SE, Standard Error.") %>%
  align(align = "left", part = "footer")

ft

# Save as Word document
doc <- read_docx()
doc <- body_add_flextable(doc, ft)
print(doc, target = "tab2.docx")
```

# interaction test - wald test

```{r}
# Interaction test for tx * age.group
mod <- coxph(Surv(t2death,death) ~ tx*age.group + gender + sysbp + hidiabet + hihypert, data = PEACE, ties = 'breslow')
pval_age_group <- summary(mod)$coefficients["tx:age.group", "Pr(>|z|)"]

# Interaction test for tx * gender
mod <- coxph(Surv(t2death,death) ~ tx*gender + age.group + sysbp + hidiabet + hihypert, data = PEACE, ties = 'breslow')
pval_gender <- summary(mod)$coefficients["tx:gender", "Pr(>|z|)"]

# Interaction test for tx * sysbp
mod <- coxph(Surv(t2death,death) ~ tx*sysbp + gender + age.group + hidiabet + hihypert, data = PEACE, ties = 'breslow')
pval_sysbp <- summary(mod)$coefficients["tx:sysbp", "Pr(>|z|)"]

# Interaction test for tx * hidiabet
mod <- coxph(Surv(t2death,death) ~ tx*hidiabet + gender + sysbp + age.group + hihypert, data = PEACE, ties = 'breslow')
pval_hidiabet <- summary(mod)$coefficients["tx:hidiabet", "Pr(>|z|)"]

# Interaction test for tx * hihypert
mod <- coxph(Surv(t2death,death) ~ tx*hihypert + gender + sysbp + hidiabet + age.group, data = PEACE, ties = 'breslow')
pval_hihypert <- summary(mod)$coefficients["tx:hihypert", "Pr(>|z|)"]

data.frame(
  Interaction = c("tx:age.group", "tx:gender", "tx:sysbp", "tx:hidiabet", "tx:hihypert"),
  P_Value = c(pval_age_group, pval_gender, pval_sysbp, pval_hidiabet, pval_hihypert)
)
```

# interaction test - LRT

```{r}
# Function to extract LRT p-value
get_LRT_pval <- function(full_model, reduced_model) {
  lrt_result <- anova(reduced_model, full_model, test="LRT")
  return(lrt_result$`Pr(>|Chi|)`[2])  # Extract p-value for the interaction term
}

# Interaction test for tx * age.group
mod_full <- coxph(Surv(t2death,death) ~ tx*age.group + gender + sysbp + hidiabet + hihypert, data = PEACE, ties = 'breslow')
mod_reduced <- coxph(Surv(t2death,death) ~ tx + age.group + gender + sysbp + hidiabet + hihypert, data = PEACE, ties = 'breslow')
pval_age_group <- get_LRT_pval(mod_full, mod_reduced)

# Interaction test for tx * gender
mod_full <- coxph(Surv(t2death,death) ~ tx*gender + age.group + sysbp + hidiabet + hihypert, data = PEACE, ties = 'breslow')
mod_reduced <- coxph(Surv(t2death,death) ~ tx + gender + age.group + sysbp + hidiabet + hihypert, data = PEACE, ties = 'breslow')
pval_gender <- get_LRT_pval(mod_full, mod_reduced)

# Interaction test for tx * sysbp
mod_full <- coxph(Surv(t2death,death) ~ tx*sysbp + gender + age.group + hidiabet + hihypert, data = PEACE, ties = 'breslow')
mod_reduced <- coxph(Surv(t2death,death) ~ tx + sysbp + gender + age.group + hidiabet + hihypert, data = PEACE, ties = 'breslow')
pval_sysbp <- get_LRT_pval(mod_full, mod_reduced)

# Interaction test for tx * hidiabet
mod_full <- coxph(Surv(t2death,death) ~ tx*hidiabet + gender + sysbp + age.group + hihypert, data = PEACE, ties = 'breslow')
mod_reduced <- coxph(Surv(t2death,death) ~ tx + hidiabet + gender + sysbp + age.group + hihypert, data = PEACE, ties = 'breslow')
pval_hidiabet <- get_LRT_pval(mod_full, mod_reduced)

# Interaction test for tx * hihypert
mod_full <- coxph(Surv(t2death,death) ~ tx*hihypert + gender + sysbp + hidiabet + age.group, data = PEACE, ties = 'breslow')
mod_reduced <- coxph(Surv(t2death,death) ~ tx + hihypert + gender + sysbp + hidiabet + age.group, data = PEACE, ties = 'breslow')
pval_hihypert <- get_LRT_pval(mod_full, mod_reduced)

data.frame(
  Interaction = c("tx:age.group", "tx:gender", "tx:sysbp", "tx:hidiabet", "tx:hihypert"),
  P_Value = c(pval_age_group, pval_gender, pval_sysbp, pval_hidiabet, pval_hihypert)
)
```


# male only

```{r}
PEACE.m <- PEACE[PEACE$gender == "0", ]
PEACE.m <- PEACE.m %>%
  mutate(tx = factor(tx, 
                     labels = c("Standard", 
                                "ACE-inhibitor therapy")),
         age.group = factor(age.group, 
                            labels = c("â‰¤ 65", 
                                       "> 65")),
         hidiabet = factor(hidiabet, 
                           labels = c("No Diabetes", 
                                      "Diabetes")),
         hihypert = factor(hihypert, 
                           labels = c("No Hypertension", 
                                      "Hypertension"))) %>%
  rename(Treatment = tx,
         `Age Group` = age.group,
         `Systolic Blood Pressure` = sysbp,
         `History of Diabetes` = hidiabet,
         `History of Hypertension` = hihypert)
```


```{r}
fit.m1 <- coxph(Surv(t2death,death) ~ Treatment, data = PEACE.m, ties = 'breslow')
summary(fit.m1)

fit.m2 <- coxph(Surv(t2death,death) ~ Treatment + `Age Group` + `Systolic Blood Pressure` + `History of Diabetes` + `History of Hypertension`, data = PEACE.m, ties = 'breslow')
summary(fit.m2)
```


# female only

```{r}
PEACE.f <- PEACE[PEACE$gender == "1", ]
PEACE.f <- PEACE.f %>%
  mutate(tx = factor(tx, 
                     labels = c("Standard", 
                                "ACE-inhibitor therapy")),
         age.group = factor(age.group, 
                            labels = c("â‰¤ 65", 
                                       "> 65")),
         hidiabet = factor(hidiabet, 
                           labels = c("No Diabetes", 
                                      "Diabetes")),
         hihypert = factor(hihypert, 
                           labels = c("No Hypertension", 
                                      "Hypertension"))) %>%
  rename(Treatment = tx,
         `Age Group` = age.group,
         `Systolic Blood Pressure` = sysbp,
         `History of Diabetes` = hidiabet,
         `History of Hypertension` = hihypert)
```


```{r}
fit.f1 <- coxph(Surv(t2death,death) ~ Treatment, data = PEACE.f, ties = 'breslow')
summary(fit.f1)

fit.f2 <- coxph(Surv(t2death,death) ~ Treatment + `Age Group` + `Systolic Blood Pressure` + `History of Diabetes` + `History of Hypertension`, data = PEACE.f, ties = 'breslow')
summary(fit.f2)
```


# fig2 - forest plot for stratified analysis

```{r fig.height=10, fig.width=20}
p1 <- ggforest(model = fit.m1,
         data = PEACE.m, 
         cpositions = c(0.02,0.22,0.4),
         fontsize = 0.8, 
         noDigits = 2, 
         main = "Male Only\n Unadjusted Model")

p2 <- ggforest(model = fit.m2,
         data = PEACE.m, 
         cpositions = c(0.02,0.22,0.4),
         fontsize = 0.8, 
         noDigits = 2, 
         main = "Fully-adjusted Model")

p3 <- ggforest(model = fit.f1,
         data = PEACE.f, 
         cpositions = c(0.02,0.22,0.4),
         fontsize = 0.8, 
         noDigits = 2, 
         main = "Female Only\n Unadjusted Model")

p4 <- ggforest(model = fit.f2,
         data = PEACE.f, 
         cpositions = c(0.02,0.22,0.4),
         fontsize = 0.8, 
         noDigits = 2, 
         main = "Fully-adjusted Model")

fig2 <- (p1 + p3) / (p2 + p4) + plot_layout(heights = c(1, 3))
fig2

# save as png
library(cowplot)
png("fig2.png", width = 20, height = 10, units = "in", res = 300)
print(fig2)
dev.off()
```




# fig3 - AFT model

```{r}
fit3 <- coxph(Surv(t2death,death) ~ tx + age + gender + sysbp + hidiabet + hihypert, data = PEACE, ties = 'breslow')
cox.zph(fit3)

#Get Cox-Snell residual based on Martingale residuals
mg.residual <- resid(fit2, type = "martingale")
cs.residual <- PEACE$death - mg.residual
#Graphical Plot
fit.cs <- survfit(Surv(cs.residual, PEACE$death) ~ 1) #Get Kaplan-Meier estiamtes
H.cs <- cumsum(fit.cs$n.event/fit.cs$n.risk)
plot(fit.cs$time, H.cs, type='s', col='blue',
main = 'Cox-Snell Residual Plot',
xlab = 'Residual', ylab = 'Nelson-Aalen Cum. Hazard')
#Note here that 'time' is the value of the Cox-Snell residual
abline(0, 1, col='red', lty = 2)
```


```{r fig.height=5, fig.width=5}
par(mfrow=c(2,2))

#- Fit different survival distributions
fit.12.2.exp <- survreg(Surv(t2death,death) ~ tx + age + gender + sysbp + hidiabet + hihypert, data = PEACE, dist = 'exponential')
fit.12.2.wb <- survreg(Surv(t2death,death) ~ tx + age + gender + sysbp + hidiabet + hihypert, data = PEACE, dist = 'weibull')
fit.12.2.ll <- survreg(Surv(t2death,death) ~ tx + age + gender + sysbp + hidiabet + hihypert, data = PEACE, dist = 'loglogistic')
fit.12.2.ln <- survreg(Surv(t2death,death) ~ tx + age + gender + sysbp + hidiabet + hihypert, data = PEACE, dist = 'lognormal')

#Get Cox-Snell Residuals

#Exponential
sigma <- fit.12.2.exp$scale
eta   <- -fit.12.2.exp$linear.predictors/sigma

r.exp <- PEACE$t2death * exp(eta)

fit   <- survfit(Surv(r.exp, PEACE$death) ~ 1)
H.exp <- cumsum(fit$n.event / fit$n.risk)

plot(H.exp ~ fit$time, type = 'l', main = 'Exponential AFT Model',
     ylab = 'Estimated Cumulative Hazard', xlab = 'Cox-Snell Residual')
abline(0, 1, col='red',  lty=2)


#Weibull
sigma  <- fit.12.2.wb$scale
alpha  <- 1 / sigma
eta    <- -fit.12.2.wb$linear.predictors / sigma

r.wb <- PEACE$t2death^alpha * exp(eta)

fit   <- survfit(Surv(r.wb, PEACE$death) ~ 1)
H.wb  <- cumsum(fit$n.event/fit$n.risk)

plot(H.wb ~ fit$time, type = 'l', main = 'Weibull AFT Model',
     ylab = 'Estimated Cumulative Hazard', xlab = 'Cox-Snell Residual')
abline(0, 1, col='red',  lty=2)

#Log-Logistic
sigma  <- fit.12.2.ll$scale
alpha  <- 1 / sigma
eta    <- -fit.12.2.ll$linear.predictors / sigma

r.ll  <- -log(1/(1 + PEACE$t2death^alpha*exp(eta)))

fit   <- survfit(Surv(r.ll, PEACE$death) ~ 1)
H.ll  <- cumsum(fit$n.event / fit$n.risk)

plot(H.ll ~ fit$time, type = 'l', main = 'Log-Logistic AFT Model',
     ylab = 'Estimated Cumulative Hazard', xlab = 'Cox-Snell Residual')
abline(0, 1, col='red',  lty=2)

#Log-Normal Distribution
eta    <- -fit.12.2.ln$linear.predictors / fit.12.2.ln$scale
r.ln   <- -log(1 - pnorm((log(PEACE$t2death) - fit.12.2.ln$linear.predictors) / fit.12.2.ln$scale))

fit   <- survfit(Surv(r.ln, PEACE$death) ~ 1)
H.ln  <- cumsum(fit$n.event/fit$n.risk)

plot(H.ln ~ fit$time, type = 'l', main = 'Log-Normal AFT Model',
     ylab = 'Estimated Cumulative Hazard', xlab = 'Cox-Snell Residual')
abline(0, 1, col='red',  lty = 2) 
```








